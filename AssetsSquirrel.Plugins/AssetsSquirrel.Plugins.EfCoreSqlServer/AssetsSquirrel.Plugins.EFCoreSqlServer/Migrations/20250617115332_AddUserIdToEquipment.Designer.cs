// <auto-generated />
using System;
using AssetsSquirrel.Plugins.EFCoreSqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetsSquirrel.Plugins.EFCoreSqlServer.Migrations
{
    [DbContext(typeof(AssetsSquirrelContext))]
    [Migration("20250617115332_AddUserIdToEquipment")]
    partial class AddUserIdToEquipment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeReferenceNumber")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Email = "pawelka@komfort.pl",
                            FirstName = "Paweł",
                            IsActive = true,
                            LastName = "Karasiński"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Email = "dariusz.gasiorowski@komfort.pl",
                            FirstName = "Dariusz",
                            IsActive = true,
                            LastName = "Gąsiorowski"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Email = "Konrad.Wawrzyniak@komfort.pl",
                            FirstName = "Konrad",
                            IsActive = true,
                            LastName = "Wawrzyniak"
                        });
                });

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentId"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRemoved")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HardwareTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SuppilerId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("HardwareTypeId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("SuppilerId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.EquipmentHistory", b =>
                {
                    b.Property<int>("EquipmentHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentHistoryId"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfChange")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRemoved")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("HardwareTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SuppilerId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentHistoryId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("HardwareTypeId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("SuppilerId");

                    b.ToTable("EquipmentHistories");
                });

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.Error", b =>
                {
                    b.Property<int>("IdError")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdError"));

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("InnerException")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLogin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdError");

                    b.ToTable("Errors");
                });

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.HardwareType", b =>
                {
                    b.Property<int>("HardwareTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HardwareTypeId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HardwareTypeId");

                    b.ToTable("HardwareTypes");

                    b.HasData(
                        new
                        {
                            HardwareTypeId = 1,
                            Description = "",
                            IsActive = true,
                            Name = "Komputer"
                        },
                        new
                        {
                            HardwareTypeId = 2,
                            Description = "",
                            IsActive = true,
                            Name = "Laptop"
                        },
                        new
                        {
                            HardwareTypeId = 3,
                            Description = "",
                            IsActive = true,
                            Name = "Monitor"
                        },
                        new
                        {
                            HardwareTypeId = 4,
                            Description = "",
                            IsActive = true,
                            Name = "Mysz"
                        },
                        new
                        {
                            HardwareTypeId = 5,
                            Description = "",
                            IsActive = true,
                            Name = "Mysz optyczna"
                        },
                        new
                        {
                            HardwareTypeId = 6,
                            Description = "",
                            IsActive = true,
                            Name = "Klawiatura"
                        },
                        new
                        {
                            HardwareTypeId = 7,
                            Description = "",
                            IsActive = true,
                            Name = "Drukarka"
                        },
                        new
                        {
                            HardwareTypeId = 8,
                            Description = "",
                            IsActive = true,
                            Name = "Drukarka fiskalna"
                        });
                });

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MPK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            City = "Stryków",
                            Code = "M100",
                            Email = "",
                            IsActive = true,
                            MPK = "PL1M100Z",
                            PhoneNumber = "",
                            Street = "Magazyn Centralny"
                        },
                        new
                        {
                            LocationId = 2,
                            City = "Łódź",
                            Code = "S000",
                            Email = "",
                            IsActive = true,
                            MPK = "PL1C001Z",
                            PhoneNumber = "",
                            Street = "Biuro - Srebrzyńska 14"
                        },
                        new
                        {
                            LocationId = 3,
                            City = "Łódź",
                            Code = "N001",
                            Email = "",
                            IsActive = true,
                            MPK = "PL1N001Z",
                            PhoneNumber = "",
                            Street = "Magazyn IT - Srebrzyńska 14"
                        });
                });

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.Manufacturer", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManufacturerId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManufacturerId");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            ManufacturerId = 1,
                            Description = "",
                            IsActive = true,
                            Name = "Asus"
                        },
                        new
                        {
                            ManufacturerId = 2,
                            Description = "",
                            IsActive = true,
                            Name = "Acer"
                        },
                        new
                        {
                            ManufacturerId = 3,
                            Description = "",
                            IsActive = true,
                            Name = "HP"
                        },
                        new
                        {
                            ManufacturerId = 4,
                            Description = "",
                            IsActive = true,
                            Name = "Lenovo"
                        },
                        new
                        {
                            ManufacturerId = 5,
                            Description = "",
                            IsActive = true,
                            Name = "Cisco"
                        });
                });

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.Suppiler", b =>
                {
                    b.Property<int>("SuppilerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuppilerId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SuppilerId");

                    b.ToTable("Suppilers");

                    b.HasData(
                        new
                        {
                            SuppilerId = 1,
                            Description = "",
                            IsActive = true,
                            Name = "X-KOM"
                        },
                        new
                        {
                            SuppilerId = 2,
                            Description = "",
                            IsActive = true,
                            Name = "MPC"
                        },
                        new
                        {
                            SuppilerId = 3,
                            Description = "",
                            IsActive = true,
                            Name = "Lantre"
                        });
                });

            modelBuilder.Entity("AssetsSquirrel.CoreBusiness.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.Equipment", b =>
                {
                    b.HasOne("AssetsSquirrel.CoreBusiness.ApplicationUser", "ApplicationUser")
                        .WithMany("Equipments")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("AssetSquirrel.CoreBusiness.HardwareType", "HardwareType")
                        .WithMany("Equipments")
                        .HasForeignKey("HardwareTypeId");

                    b.HasOne("AssetSquirrel.CoreBusiness.Invoice", "Invoice")
                        .WithMany("Equipments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AssetSquirrel.CoreBusiness.Manufacturer", "Manufacturer")
                        .WithMany("Equipments")
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("AssetSquirrel.CoreBusiness.Suppiler", "Suppiler")
                        .WithMany("Equipments")
                        .HasForeignKey("SuppilerId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("HardwareType");

                    b.Navigation("Invoice");

                    b.Navigation("Manufacturer");

                    b.Navigation("Suppiler");
                });

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.EquipmentHistory", b =>
                {
                    b.HasOne("AssetsSquirrel.CoreBusiness.ApplicationUser", "ApplicationUser")
                        .WithMany("EquipmentHistories")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("AssetSquirrel.CoreBusiness.Equipment", "Equipment")
                        .WithMany("EquipmentHistories")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetSquirrel.CoreBusiness.HardwareType", "HardwareType")
                        .WithMany()
                        .HasForeignKey("HardwareTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AssetSquirrel.CoreBusiness.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AssetSquirrel.CoreBusiness.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AssetSquirrel.CoreBusiness.Suppiler", "Suppiler")
                        .WithMany()
                        .HasForeignKey("SuppilerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Equipment");

                    b.Navigation("HardwareType");

                    b.Navigation("Invoice");

                    b.Navigation("Manufacturer");

                    b.Navigation("Suppiler");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AssetsSquirrel.CoreBusiness.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AssetsSquirrel.CoreBusiness.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetsSquirrel.CoreBusiness.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AssetsSquirrel.CoreBusiness.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.Equipment", b =>
                {
                    b.Navigation("EquipmentHistories");
                });

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.HardwareType", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.Invoice", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.Manufacturer", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("AssetSquirrel.CoreBusiness.Suppiler", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("AssetsSquirrel.CoreBusiness.ApplicationUser", b =>
                {
                    b.Navigation("EquipmentHistories");

                    b.Navigation("Equipments");
                });
#pragma warning restore 612, 618
        }
    }
}
