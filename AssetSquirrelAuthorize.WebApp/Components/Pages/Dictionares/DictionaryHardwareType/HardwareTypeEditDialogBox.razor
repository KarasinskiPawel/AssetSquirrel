@using AssetSquirrel.CoreBusiness.Dto
@using AssetSquirrel.UseCases.HardwareType.Interfaces

@inject IEditHardwareTypeUseCase EditHardwareTypeUseCase

@if (HardwareType is not null)
{
    <div class="dialog-body">
        <EditForm FormName="AddNewSuppiler"
                  EditContext="EditContext">

            <DataAnnotationsValidator></DataAnnotationsValidator>

            <div class="row mt-3 mb-3">
                <div class="offset-1 col-2">
                    <label class="col-form-label"> Name </label>
                </div>
                <div class="col-7">
                    <InputText class="form-control" @bind-Value="HardwareType.Name"></InputText>
                </div>
                <div class="col-1">
                </div>
            </div>

            <div class="row mt-3 mb-3">
                <div class="offset-1 col-2">
                    <label class="col-form-label"> Description </label>
                </div>
                <div class="col-7">
                    <InputTextArea class="form-control" @bind-Value="HardwareType.Description"></InputTextArea>
                </div>
                <div class="col-1">
                </div>
            </div>

        </EditForm>
    </div>
    <div class="dialog-footer">
        <button class="btn btn-sm btn-danger w-25" @onclick="OnCancel"> Zamknij </button>

        <button class="btn btn-sm btn-primary w-25" @onclick="EditHardwareType"> Zapisz </button>
    </div>
}

@code {
    [Parameter, EditorRequired]
    public HardwareTypeDto HardwareType { get; set; }

    [Parameter, EditorRequired]
    public EventCallback OnCancel { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<bool> OnSave { get; set; }

    private EditContext? EditContext;

    protected override void OnInitialized()
    {
        EditContext = new EditContext(HardwareType);
        base.OnInitialized();
    }

    private async Task EditHardwareType()
    {
        if (EditContext is not null && EditContext.Validate())
        {
            await OnSave.InvokeAsync(await EditHardwareTypeUseCase.UpdateHardwareTypeAsync(HardwareType));
        }
    }
}
